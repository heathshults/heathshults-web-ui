{"id":"zv9C","dependencies":[{"name":"/home/heathshults/_appdev/heathshults-web-ui/tsconfig.json","includedInParent":true,"mtime":1614743722000},{"name":"/home/heathshults/_appdev/heathshults-web-ui/package.json","includedInParent":true,"mtime":1614763173231},{"name":"/home/heathshults/_appdev/heathshults-web-ui/.browserslistrc","includedInParent":true,"mtime":1614215328000}],"generated":{"js":"\"use strict\";function e(e){return!!new RegExp(\"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\",\"i\").test(e.toString())}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ValidURL=e;"},"sourceMaps":{"js":{"mappings":[{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":0}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":13}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":22}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":16,"column":25},"generated":{"line":1,"column":24}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":27}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":17,"column":18},"generated":{"line":1,"column":35}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":1,"column":39}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":46}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":1,"column":214}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":1,"column":219}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":224}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":1,"column":226}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":238}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":245}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":260}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":268}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":281}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":282}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":289}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":293}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":301}},{"source":"modules/validate-url/validate-url.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":310}}],"sources":{"modules/validate-url/validate-url.ts":"/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * @function valieURL - Checks if a string is a url.\n * \n * @param {unknown} url - A string.\n * @const pattern - A RegExp that tests the string for url pattern.\n * @return {true/false}\n * \n * @example \n * \n * validURL('http://hello.com');\n * \n */\nexport function ValidURL(url: string): any {\n  const pattern = new RegExp(\n    // protocol\n    '^(https?:\\\\/\\\\/)?' +\n    // domain name\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' +\n    // OR ip (v4) address\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' +\n    // port and path\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' +\n    // query string\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' +\n    // fragment locator \n    '(\\\\#[-a-z\\\\d_]*)?$', 'i');\n\n  return !!pattern.test(url.toString());\n}\n"},"lineCount":null}},"error":null,"hash":"1dc780dd13a1facab669b3a104a99519","cacheData":{"env":{}}}