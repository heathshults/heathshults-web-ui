<style>
      .usaa-tooltip {
        position: relative;
        display: none;
        transition: all .25s ease-in-out;
      }
      .show {
        display: block;
        transition: all .25s ease-in-out;

      }
      .show .usaa-tooltip-content {
        position: absolute;
        top: 0;
        transition: all .25s ease-in-out;
      }
      .usaa-tooltip-content {
        position: absolute;
        top: 50px;
        background: #005799;
        padding: .25rem;
        transition: all .25s ease-in-out;
        /* display: none; */
      }
    </style>
    <div class="container" style="padding-top: 100px;">
      
      <span id="tooltip" class="usaa-tooltip"><span class="usaa-tooltip-content">You have already rated this kb. <a href="javascript:void(0);" class="usaa-tooltip-button" onclick="() => rateit();">Rate it!</a> <a href="javascript:void(0);" class="usaa-tooltip-button" onclick="() => this.classList.toggle('show');">Dismiss</a></span></span>
      <div style="text-align: center; margin:  auto; width: 400px; height: 50px; border: 1px solid #dedede; background: #f8f8f8;">
        <h2>This is a toolbar.</h2>
        <button data-target="tooltip">show tooltip</button>
      </div>
    </div> 
    <!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
    <svcript src="" async defer></svcript>
    <script>
      var l = console.log;
      
      document.addEventListener('click', (event) => {
        event.preventDefault();
        const ttTrigger = event.target;
        l(ttTrigger)
        l(ttTrigger.getAttribute('data-target'))
        var tooltipId = ttTrigger.getAttribute('data-target')
        l(tooltipId)
          var targetTooltip = document.getElementById(tooltipId);
          
          l(`get el by  id ${targetTooltip}`)
          if (!targetTooltip.classList.contains('show')) {
            targetTooltip.classList.add('show');
          } else {
            targetTooltip.classList.remove('show')
          }
        
          
       
      }, false)
      
      function TooltipMessage(tooltipId, tooltipContent) {
        this.tooltipId = tooltipId 
        this.tooltipContent = tooltipContent;
        document.getElementById(tooltipId).innerHTML = this.tooltipContent;
      }
    </script>
