/*
 * CSS CUSTOM VARIABLE FUNCTION
 *
 * Get css vars from scss vars
 *
 * Use:
 * `color: v(primary);`
 * `color: v(primary, #000);`
 * `padding-left: v(x-padding, 2rem);`
 * `transform: translate3d(v(x-delta), v(y-delta), 0);`
 *
 * Parameters:
 *  $hs-Var: name of the SASS variable, without its double hyphen prefix
 *  $hs-fallback: (optional, null by default): custom property fallback value
 */
/*
 * CSS CUSTOM VARIABLE FUNCTION
 *
 * Get css vars from scss vars
 *
 * Use:
 * `color: v(primary);`
 * `color: v(primary, #000);`
 * `padding-left: v(x-padding, 2rem);`
 * `transform: translate3d(v(x-delta), v(y-delta), 0);`
 *
 * Parameters:
 *  $hs-Var: name of the SASS variable, without its double hyphen prefix
 *  $hs-fallback: (optional, null by default): custom property fallback value
 */
/*
 * CSS CUSTOM VARIABLE FUNCTION
 *
 * Get css vars from scss vars
 *
 * Use:
 * `color: v(primary);`
 * `color: v(primary, #000);`
 * `padding-left: v(x-padding, 2rem);`
 * `transform: translate3d(v(x-delta), v(y-delta), 0);`
 *
 * Parameters:
 *  $hs-Var: name of the SASS variable, without its double hyphen prefix
 *  $hs-fallback: (optional, null by default): custom property fallback value
 */
/*
 * CSS CUSTOM VARIABLE FUNCTION
 *
 * Get css vars from scss vars
 *
 * Use:
 * `color: v(primary);`
 * `color: v(primary, #000);`
 * `padding-left: v(x-padding, 2rem);`
 * `transform: translate3d(v(x-delta), v(y-delta), 0);`
 *
 * Parameters:
 *  $hs-Var: name of the SASS variable, without its double hyphen prefix
 *  $hs-fallback: (optional, null by default): custom property fallback value
 */
.hs-modal[role=dialog] {
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 1071;
  display: block;
  width: 75%;
  overflow: hidden;
  visibility: hidden;
  background-color: #fff;
  border: 0 solid #74748c;
  border-radius: 4px;
  opacity: 0;
  transform: translate(-50%, -50%);
}
.hs-modal[role=dialog] .hs-button--close {
  position: fixed;
  top: 1em;
  left: 0;
  z-index: 1032;
  opacity: 0;
  transition: all 0.25s ease-out;
}
.hs-modal[role=dialog] > .hs-card {
  background-color: transparent;
  box-shadow: none;
}
.hs-modal[role=dialog] > .hs-card .hs-card__body {
  position: relative;
}
.hs-modal[role=dialog].hs-modal--ghost {
  color: #fff;
  background-color: transparent;
}
.hs-modal[role=dialog].hs-modal--ghost .hs-heading {
  color: #fff;
}
.hs-modal[role=dialog].hs-modal--full {
  top: 0%;
  left: 50%;
  z-index: 1071;
  width: 90%;
  height: 0;
  transition: all 0.25s ease-out;
  transition-delay: 0.12s;
  transform: translateX(-50%);
}
.hs-modal[role=dialog].hs-modal--full.hs-modal--visible {
  height: 100vh;
  background-color: #0f161d;
  opacity: 1;
  transition: all 0.25s ease-in;
  transition-delay: 0.12s;
}
.hs-modal[role=dialog].hs-modal--full.hs-modal--visible .hs-button--close {
  position: fixed;
  top: 10px;
  right: 10px;
  left: unset;
  z-index: 1032;
  width: 4rem;
  height: 4rem;
  font-size: 5rem;
  color: #fff;
  cursor: pointer;
  background-color: transparent;
  border: none;
  outline: none;
  opacity: 1;
  transition: all 0.25s ease-in;
}
.hs-modal[role=dialog].hs-modal--full .hs-card__body {
  position: absolute;
  top: 3.5em;
  bottom: 4em;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  color: #fff;
}
.hs-modal[role=dialog].hs-modal--full .hs-card__footer {
  position: absolute;
  bottom: 0;
  width: 100%;
}
.hs-modal[role=dialog].hs-modal--visible {
  visibility: visible;
  opacity: 1;
}
.hs-modal[role=dialog].hs-modal--visible + .hs-section {
  background-attachment: fixed;
}

.hs-modal-backdrop {
  position: fixed;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  width: 100%;
  height: 0;
  background-color: rgba(0, 0, 0, 0.75);
  opacity: 0;
  transition: all 0.25s ease-in;
  transition-delay: 0.12s;
}
.hs-modal-backdrop.hs-modal-backdrop--visible {
  top: 0px;
  z-index: 1070;
  height: 100vh;
  opacity: 1;
  transition: all 0.25s ease-out;
}