<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Portfolio website for Heath Shults - Web Developer Manager &amp; Director">
    <meta name="author" content="">

    <title>Heath Shults - Software Developer+</title>
    <script type="module" src="/components/heathenscript-ui-components.esm.js"></script>
    <script nomodule src="/components/heathenscript-ui-components.js"> </script>

    <!-- Bootstrap Core CSS -->
    <!-- <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"> -->

    <!-- Custom Fonts -->
    <link href="/assets/fa-5140/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
    <link
      href="https://fonts.googleapis.com/css2?family=Caveat:wght@400;700&family=Nothing+You+Could+Do&family=Sedgwick+Ave+Display&display=swap"
      rel="stylesheet">
    <link href='https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic,700italic' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,400;0,700;0,900;1,100&display=swap"
      rel="stylesheet">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
      integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">


    <script>
      var lsGetMode = localStorage.getItem('dark_mode')
      var dm_btn = document.getElementById('mode_widget')
      if (lsGetMode === "true") {
        document.querySelector('#darkmode').disabled = false;
        // document.querySelector('link[href="css/theme-dark-mode.css"]').disabled = false;
      }

    </script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>

    </style>
  </head>

  <body id="page-top" class="index">
    <!-- Navigation -->
    <div class="container p-0">
      <div class="row p-0 m-0">
        <div class="col-md-4 text-center">
          <button id="btn1">click me</button>
        </div>
        <div class="col-md-4 text-center">
          <div id="result" class=""><input type="text" id="inputname" value="" /> </div>
        </div>
        <div class="col-md-4 text-center">

        </div>
      </div>
    </div>
    <script>
      /** 
       * create db and open using these parameters
       * Database name, Version number, ext description, Size of database, Creation callback
       * */
      var db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);
      
      // execute a query
      // query will create a table called LOGS in 'mydb' database.
      db.transaction(function (tx) {   
         tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'); 
      });
      
      
      // INSERT 
      db.transaction(function (tx) { 
        tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'); 
        tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, "foobar")'); 
        tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, "logmsg")'); 
      }); 
      
      // INSERT with dynamic values 
      db.transaction(function (tx) {   
         tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'); 
         tx.executeSql('INSERT INTO LOGS (id,log) VALUES (?, ?'), [e_id, e_log]; 
      });
      
      // READ Operation
      // To read already existing records we use a callback to capture the results as follows âˆ’

      var db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);  

      db.transaction(function (tx) { 
         tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');
         tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, "foobar")'); 
         tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, "logmsg")'); 
      });  

      db.transaction(function (tx) { 
         tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) { 
            var len = results.rows.length, i; 
            msg = "<p>Found rows: " + len + "</p>"; 
            document.querySelector('#status').innerHTML +=  msg; 
        
            for (i = 0; i < len; i++) { 
               alert(results.rows.item(i).log ); 
            } 
        
         }, null); 
      });
      
      // in this example make sure to put the code
      // within the head tags at the top
      
      Live Demo
//<!DOCTYPE HTML> 

//<html>  
  // <head> 
  
    //  <script type = "text/javascript"> 
         var db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024); 
         var msg; 
    
         db.transaction(function (tx) { 
            tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'); 
            tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, "foobar")'); 
            tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, "logmsg")'); 
            msg = '<p>Log message created and row inserted.</p>'; 
            document.querySelector('#status').innerHTML =  msg; 
         })

         db.transaction(function (tx) { 
            tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) { 
               var len = results.rows.length, i; 
               msg = "<p>Found rows: " + len + "</p>"; 
               document.querySelector('#status').innerHTML +=  msg; 
      
               for (i = 0; i < len; i++) { 
                  msg = "<p><b>" + results.rows.item(i).log + "</b></p>"; 
                  document.querySelector('#status').innerHTML +=  msg; 
               } 
            }, null); 
         }); 
//       /script> 
//    </head> 
  
//    <body> 
//       <div id = "status" name = "status">Status Message</div> 
//    </body> 
// </html>
      
      
      
      // function setGreetingText(key, value) {
      //   const siteStorage =     window.localStorage;
      //   const siteSession =     window.sessionStorage;
      //   siteSession.setItem(key, value);
          
      // };
          
      //   /////////////////////////////////////////////////////////////////////////////
      // // let myString = new String("hi there!")
      // let myProxiedVar = new Proxy(setGreetingText, {
      //   has: function(target, key) {
      //     return target.indexOf(key) != -1;
      //   }
      // })
      // console.log("i" in setGreetingText);
      // // false
      // console.log("x" in setGreetingText);
      // //true

    </script>
  
</body>

</html>
