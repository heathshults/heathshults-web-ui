@import "../../scss/vars";

:host {
  display: block;


  .hs-3drotate-conainer {
    position: relative;
  }
  .opacity-max {
    opacity: 1;
  }
  .opacity-none {
    opacity: 0;
  }
  .scene {
    position: relative;
    min-width: 170px;
    max-width: 770px;
    min-height: 100px;
    max-height: 513px;
    // margin: 40px 0;
    margin: 0 auto;
    border: 1px solid transparent;
    perspective: 1000px;
  }

  .hs-threeDRotator {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: transform 1s;
    transform: translateZ(-288px);
    transform-style: preserve-3d;
  }

  .hs-threeDRotator__cell {
    position: absolute;
    top: 10px;
    left: 10px;
    min-width: 190px;
    max-width: 750px;
    min-height: 120px;
    max-height: 500px;
    font-size: 80px;
    font-weight: bold;
    line-height: 116px;
    color: white;
    text-align: center;
    border: 2px solid black;
    transition: transform 1s, opacity 1s;
  }
  .hs-threeDRotator-img {
    max-width: 100%;
    height: auto;
  }

  .hs-threeDRotator__cell:nth-child(9n+1) { background: hsla(0, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+2) { background: hsla(40, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+3) { background: hsla(80, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+4) { background: hsla(120, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+5) { background: hsla(160, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+6) { background: hsla(200, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+7) { background: hsla(240, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+8) { background: hsla(280, 100%, 50%, 0.8); }
  .hs-threeDRotator__cell:nth-child(9n+0) { background: hsla(320, 100%, 50%, 0.8); }

  .hs-threeDRotator__cell:nth-child(1) { transform: rotateY(0deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(2) { transform: rotateY(40deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(3) { transform: rotateY(80deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(4) { transform: rotateY(120deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(5) { transform: rotateY(160deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(6) { transform: rotateY(200deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(7) { transform: rotateY(240deg) translateZ(288px); }
  .hs-threeDRotator__cell:nth-child(8) { transform: rotateY(280deg)  translateZ(288px); }

  .hs-rotate3d-nav {
    position: absolute;
    bottom: 0;
    left: 9px;
    z-index: 100;
    // display: inline-flex;
    flex: 1 0 0%;
    justify-content: space-between;
    padding: var(--space-sm);
    background: var(--hs-black_75);
    // transform: translateX(50%);
    .hs-rotate3d-next    {
      position: absolute;
      top: 50%;
      right: 30px;
      z-index: 101;
      width: 18px;
      height: 18px;
      background-color: transparent;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      border: 0;
      transform: translateY(-50%)
    }
    .hs-rotate3d-prev {
      position: absolute;
      top: 50%;
      left: 30px;
      z-index: 101;
      width: 18px;
      height: 18px;
      background-color: transparent;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      border: 0;
      transform: translateY(-50%)
    }
  }

  @mixin rotate3dMaxWidths($map, $key, $value) {
    @debug #{$key};
    @if map-has-key($map, #{$key}) {
      $width: map-deep-get($map, #{$key}, "width");
      @debug $width;
      $height: map-deep-get($map, #{$key}, "height");
      @debug $height;
      @media (min-width: $value) {
        .scene {
          position: relative;
          width: map-deep-get($map, #{$key}, "width") + 20px;
          max-width: 100%;
          height: map-deep-get($map, #{$key}, "height") + 20px;
          // margin: (map-deep-get($map, #{$key}, "margin") / 2) 0;
          margin: 0 auto;
          transition: all 1s;
        }

        .hs-threeDRotator__cell {
          width: map-deep-get($map, #{$key}, "width");
          max-width: 100%;
          height: auto;
          max-height: map-deep-get($map, #{$key}, "height");
          transition: all 1s;
        }

        .hs-rotate3d-nav {
          width: map-deep-get($map, #{$key}, "width");
        }
        @content;
      }
    }
  }

  @function map-deep-get($map, $keys...) {
    @each $key in $keys {
      $map: map-get($map, $key);
    }
    @return $map;
  }

  @each $key, $value in $breakpoints {
    @include rotate3dMaxWidths($rotate3d-sizes, $key, $value);

  }
}
