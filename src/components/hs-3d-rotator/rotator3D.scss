@import "../../scss/vars";

.hs-vanish {
  opacity: 0;
  transition: all 1s;
}

.rotator3D__container {
  position: relative;
  width: 100%;
}

// rotator3D configuration parameters
$item-width: 40%; // Now we can use percentages!
$item-separation: 0px; // This now is set with Js
$viewer-distance: 700px;

.rotator3D {

  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  overflow: hidden;

  perspective: $viewer-distance;

  >* {
    flex: 0 0 auto;
  }

  .rotator3D__figure {
    width: $item-width;
    margin: 0;
    transition: transform 0.5s;
    transform-style: preserve-3d;

    .rotator3D__img {
      box-sizing: border-box;
      width: 100%;
      max-width: 100%;
      height: auto;
      padding: 0 $item-separation / 2;

      &:not(:first-of-type) {
        position: absolute;
        top: 0;
        left: 0;
      }
    }
  }
}



.rotator3D__nav {
  position: absolute;
  bottom: 20px;
  left: 50%;
  z-index: 999;
  display: inline-flex;
  justify-content: center;
  padding: .5rem 1rem;
  margin: 20px 0 0;
  background: rgba(0, 0, 0, .75);
  transform: translateX(-50%);

  .rotator3D__button {
    display: flex;
    flex: 0 0 auto;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    padding: 0;
    margin: 0 5px;

    color: var(--hs-gray-500);
    letter-spacing: 1px;

    cursor: pointer;
    background-color: transparent;
    border: 1px solid transparent;
    &:hover {
      color: alpha(var(--hs-white), 75%);
      background-color: alpha(var(--hs-color-5), 50%);
    }

    &:focus,
    &:focus-within {
      background-color: var(--hs-black_25);
      outline: 1px solid alpha(var(--hs-color-5), 60%);
    }

  }
  .next {
    right: 30px;

    &:hover, &:focus {
      background: #000;
    }
  }

  .prev {
    left: 30px;

    &:hover, &:focus {
      background: #000;
    }
  }
}

// @mixin rotate3dMaxWidths($map, $key, $value) {
//   @debug #{$key};
//   @if map-has-key($map, #{$key}) {
//     $width: map-deep-get($map, #{$key}, "width");
//     @debug $width;
//     $height: map-deep-get($map, #{$key}, "height");
//     @debug $height;
//     @media (min-width: $value) {
//       .rotator3D__scene {
//         position: relative;
//         width: map-deep-get($map, #{$key}, "width") + .08px;
//         max-width: 100%;
//         height: map-deep-get($map, #{$key}, "height") + .08px;
//         margin: (map-deep-get($map, #{$key}, "margin") / 2) auto;
//         // margin: 0 auto;
//         transition: all 1s;
//       }

//       .rotator3D__img {
//         width: map-deep-get($map, #{$key}, "width");
//         max-width: 100%;
//         height: auto;
//         max-height: map-deep-get($map, #{$key}, "height");
//         transition: all 1s;
//       }

//       .rotator3D__nav {
//         width: (map-deep-get($map, #{$key}, "width") / 2);
//       }
//       @content;
//     }
//   }
// }

// @function map-deep-get($map, $keys...) {
//   @each $key in $keys {
//     $map: map-get($map, $key);
//   }
//   @return $map;
// }

// @each $key, $value in $breakpoints {
//   @include rotate3dMaxWidths($rotate3d-sizes, $key, $value);

// }
